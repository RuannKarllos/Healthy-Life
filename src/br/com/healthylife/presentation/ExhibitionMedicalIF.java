/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.healthylife.presentation;

import br.com.healthylife.dao.IDao;
import br.com.healthylife.entity.Medic;
import br.com.healthylife.structures.BinaryTree;
import br.com.healthylife.util.Constants;
import br.com.healthylife.util.Factory;
import java.io.File;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ruann
 */
public class ExhibitionMedicalIF extends javax.swing.JInternalFrame {

    /**
     * Creates new form ExhibitionMedicalIF
     */
    public ExhibitionMedicalIF() {
        initComponents();
        setTitle(Constants.EXHIBITION_MEDIC_TITLE);
        setList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButtonExit = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CRM", "Nome", "CPF", "Idade", "Senha"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButtonExit.setText("OK");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 628, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonExit, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(290, 290, 290))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButtonExit)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonExitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonExit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void setList() {
        try {
            String folder = "Medic";
            File file = new File(folder);
            File fileList[] = file.listFiles();
            
            IDao<Medic> dm = Factory.getDao(Medic.class);
            
            BinaryTree bt = new BinaryTree(fileList.length);
            
            
            
            for (int i = 0; i < fileList.length; i++) {
                
                Medic m = (Medic) dm.search(fileList[i].getName());
                
                bt.inserir(m);
//                
//                listM.addRow(new String[] {
//                    m.getID(), m.getName(), m.getCPF(), String.valueOf(m.getAge()), m.getPassword()
//                });
                
            }
            
            bt.imprimirArvore(jTable1);
            
        } catch (Exception e) {
            //TODO
        }
    }
}
